---
# This playbook contains common plays that will be run on all nodes.

- name: Include OS specific vars
  tags: java
  include_vars: "{{ ansible_os_family }}.yml"

- name: cpp | Install C++ compiler
  action: "{{ ansible_pkg_mgr}} name={{ item }} update_cache=yes state={{ gcc_pkg_state|default('present') }}"
  with_items:
   - clang{{ clang_version }}
  tags: cpp
  become: yes

- name: cpp | Install C++ librairies (apt)
  apt: pkg={{ item }} state=present update_cache=yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  tags: cpp
  with_items:
   - libcppunit-{{ cppunit_version }}
   - libboost{{ boost_version }}-dbg
   - libboost-iostreams{{ boost_version }}.0
   - libboost-thread{{ boost_version }}.0
   - libboost-date-time{{ boost_version }}-dev
   - libboost-system{{ boost_version }}.0
  become: yes

- name: cpp | Install C++ librairies (RedHat based)
  action: yum name={{ item }} state=present update_cache=yes
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
  tags: cpp
  with_items:
   - cppunit-{{ cppunit_version }}
   - boost{{ boost_version }}
  become: yes

- name: cpp | Install C++ quality tool (apt)
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_package_state|default('present') }} update_cache=yes"
  with_items:
   - cppcheck
   - rats
  tags: cpp
  become: yes

- name: cpp | Install required packages
  action: "{{ ansible_pkg_mgr }} state={{ util_package_state|default('present') }} name={{ item }}"
  with_items: "{{ cpp_package_list }}"
  tags: cpp
  become: yes
