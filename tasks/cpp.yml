---
# This playbook contains common plays that will be run on all nodes.

- name: Include OS specific vars
  tags: java
  include_vars: "{{ ansible_os_family }}.yml"

- name: cpp | Install C++ clang compiler
  action: "{{ ansible_pkg_mgr}} name={{ item }} update_cache=yes state={{ gcc_pkg_state|default('present') }}"
  with_items:
   - clang{{ clang_version }}
  tags: cpp
  become: yes
  
- name: cpp | Install C++ clang compiler tools
  action: "{{ ansible_pkg_mgr}} name={{ item }} update_cache=yes state={{ gcc_pkg_state|default('present') }}"
  with_items:
   - clang-format
   - clang-tidy
#   - afl-clang #fuzzer
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and ansible_distribution_version not in ['12.04', '14.04']
  tags: cpp
  become: yes  

- name: cpp | Install C++ librairies (apt)
  action: "{{ ansible_pkg_mgr}} name={{ item }} update_cache=yes state={{ gcc_pkg_state|default('present') }}"
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and ansible_distribution_version not in ['12.04','14.04']
  tags: cpp
  with_items:
   - libcppunit{{ cppunit_version }}
#   - libboost-tools-dev
#   - libboost-all-dev
   - libboost{{ boost_version }}-dbg
   - libboost-iostreams{{ boost_version }}-dev
   - libboost-date-time{{ boost_version }}-dev
#   - libboost-thread{{ boost_version }}.0
   - libboost-thread{{ boost_version }}-dev
#   - libboost-system{{ boost_version }}.0
   - libboost-system{{ boost_version }}-dev
  become: yes

- name: cpp | Install C++ librairies (RedHat based)
  action: yum name={{ item }} state=present update_cache=yes
  when: (ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux')
  tags: cpp
  with_items:
   - cppunit{{ cppunit_version }}
   - boost{{ boost_version }}
  become: yes

- name: cpp | Install C++ librairies for building 64bits (Debian based)
  action: "{{ ansible_pkg_mgr}} name={{ item }} state={{ jenkins_pkg_state|default('present') }} update_cache=yes"
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and ansible_distribution_version in ['14.04']
  with_items:
#libstdc++6
   - libstdc++-4.8-dev
  become: yes

- name: cpp | Install C++ librairies for building 64bits (Debian based)
  action: "{{ ansible_pkg_mgr}} name={{ item }} state={{ jenkins_pkg_state|default('present') }} update_cache=yes"
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and ansible_distribution_version in ['16.04']
  with_items:
#libstdc++6
   - libstdc++-5-dev
  become: yes

#See https://gcc.gnu.org/onlinedocs/libstdc++/faq.html#faq.how_to_set_paths
- name: cpp | Remove C++ librairies for building old gcc (Debian based)
  action: "{{ ansible_pkg_mgr}} name={{ item }} state={{ gcc_pkg_state|default('absent') }} update_cache=yes"
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and ansible_distribution_version in ['12.04','14.04','16.04']
  with_items:
#needed for linking old libraries
# ldconfig -v | grep libstdc++
   - libstdc++5
  become: yes
  
##
# 32 bits cross compilation
#
- name: cpp | Install C++ librairies for building 32bits (Debian based)
  action: "{{ ansible_pkg_mgr}} name={{ item }} state={{ jenkins_pkg_state|default('present') }} update_cache=yes"
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and ansible_distribution_version in ['14.04']
  with_items:
#needed for 32 bits cross compilation
   - g++-4.8-multilib
   - gcc-4.8-multilib
#sudo ln -s /usr/lib32/libstdc++.so.6 /usr/lib32/libstdc++.so fixed by lib32gcc-4.8-dev
#sudo ln -s /usr/lib32/libgcc_s.so.1 /usr/lib32/libgcc_s.so    fixed by lib32gcc-4.8-dev
#   - lib32stdc++4.8-dev
   - lib32gcc-4.8-dev
   - libstdc++-4.8-dev
  become: yes
  
- name: cpp | Install C++ librairies for building 32bits (Debian based)
  action: "{{ ansible_pkg_mgr}} name={{ item }} state={{ gcc_pkg_state|default('present') }} update_cache=yes"
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and ansible_distribution_version in ['16.04']
  with_items:
#needed for 32 bits cross compilation
#   - g++-multilib
#   - gcc-multilib
   - gcc-5-multilib
   - g++-5-multilib
#   - lib32stdc++5-dev
   - lib32gcc-5-dev
   - libstdc++-5-dev   
#   - lib32z1-dev
#   - lib32gcc-6-dev
#   - libncurses5:i386
#   - libc6:i386
#   - libstdc++6:i386
  become: yes

- name: cpp | Install C++ quality tool cppcheck
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_package_state|default('present') }} update_cache=yes"
  with_items:
   - cppcheck
  tags: cpp
  become: yes

- name: cpp | Install C++ quality tool rats
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_package_state|default('present') }} update_cache=yes"
  with_items:
   - rats
  tags: cpp
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and ansible_distribution_version in ['12.04','14.04']
  become: yes

- name: cpp | Install required packages
  action: "{{ ansible_pkg_mgr }} state={{ util_package_state|default('present') }} name={{ item }}"
  with_items: "{{ cpp_package_list }}"
  tags: cpp
  become: yes
